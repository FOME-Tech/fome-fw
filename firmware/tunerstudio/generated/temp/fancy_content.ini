
dialog = fuel_computerDialog, "fuel_computer"
	liveGraph = fuel_computer_1_Graph, "Graph", South
		graphLine = totalFuelCorrection
		graphLine = running_postCrankingFuelCorrection
		graphLine = running_intakeTemperatureCoefficient
		graphLine = running_coolantTemperatureCoefficient
	liveGraph = fuel_computer_2_Graph, "Graph", South
		graphLine = running_timeSinceCrankingInSecs
		graphLine = running_baseFuel
		graphLine = running_fuel
		graphLine = afrTableYAxis
	liveGraph = fuel_computer_3_Graph, "Graph", South
		graphLine = targetLambda
		graphLine = targetAFR
		graphLine = stoichiometricRatio
		graphLine = sdTcharge_coff
	liveGraph = fuel_computer_4_Graph, "Graph", South
		graphLine = sdAirMassInOneCylinder


dialog = ignition_stateDialog, "ignition_state"
	liveGraph = ignition_state_1_Graph, "Graph", South
		graphLine = baseDwell
		graphLine = sparkDwell
		graphLine = dwellAngle
		graphLine = cltTimingCorrection
	liveGraph = ignition_state_2_Graph, "Graph", South
		graphLine = timingIatCorrection
		graphLine = timingPidCorrection
		graphLine = dwellVoltageCorrection
		graphLine = luaTimingAdd
	liveGraph = ignition_state_3_Graph, "Graph", South
		graphLine = luaTimingMult


dialog = knock_controllerDialog, "knock_controller"
	liveGraph = knock_controller_1_Graph, "Graph", South
		graphLine = m_knockRetard
		graphLine = m_knockThreshold
		graphLine = m_knockCount
		graphLine = m_maximumRetard

indicatorPanel = high_pressure_fuel_pumpIndicatorPanel, 2
	indicator = {noValve}, "noValve No", "noValve Yes"
	indicator = {angleAboveMin}, "angleAboveMin No", "angleAboveMin Yes"
	indicator = {isHpfpInactive}, "isHpfpInactive No", "isHpfpInactive Yes"

dialog = high_pressure_fuel_pumpDialog, "high_pressure_fuel_pump"
	panel = high_pressure_fuel_pumpIndicatorPanel
	liveGraph = high_pressure_fuel_pump_1_Graph, "Graph", South
		graphLine = m_requested_pump
		graphLine = fuel_requested_percent
		graphLine = fuel_requested_percent_pi
		graphLine = nextLobe
	liveGraph = high_pressure_fuel_pump_2_Graph, "Graph", South
		graphLine = di_nextStart


dialog = injector_modelDialog, "injector_model"
	liveGraph = injector_model_1_Graph, "Graph", South
		graphLine = m_deadtime
		graphLine = pressureDelta
		graphLine = pressureRatio

indicatorPanel = launch_control_stateIndicatorPanel, 2
	indicator = {combinedConditions}, "combinedConditions No", "combinedConditions Yes"
	indicator = {launchActivatePinState}, "launchActivatePinState No", "launchActivatePinState Yes"
	indicator = {isLaunchCondition}, "isLaunchCondition No", "isLaunchCondition Yes"
	indicator = {isSwitchActivated}, "isSwitchActivated No", "isSwitchActivated Yes"
	indicator = {isClutchActivated}, "isClutchActivated No", "isClutchActivated Yes"
	indicator = {isValidInputPin}, "isValidInputPin No", "isValidInputPin Yes"
	indicator = {activateSwitchCondition}, "activateSwitchCondition No", "activateSwitchCondition Yes"
	indicator = {rpmCondition}, "rpmCondition No", "rpmCondition Yes"
	indicator = {speedCondition}, "speedCondition No", "speedCondition Yes"
	indicator = {tpsCondition}, "tpsCondition No", "tpsCondition Yes"

dialog = launch_control_stateDialog, "launch_control_state"
	panel = launch_control_stateIndicatorPanel
	liveGraph = launch_control_state_1_Graph, "Graph", South
		graphLine = retardThresholdRpm

indicatorPanel = antilag_system_stateIndicatorPanel, 2
	indicator = {isAntilagCondition}, "isAntilagCondition No", "isAntilagCondition Yes"
	indicator = {ALSMinRPMCondition}, "ALSMinRPMCondition No", "ALSMinRPMCondition Yes"
	indicator = {ALSMaxRPMCondition}, "ALSMaxRPMCondition No", "ALSMaxRPMCondition Yes"
	indicator = {ALSMinCLTCondition}, "ALSMinCLTCondition No", "ALSMinCLTCondition Yes"
	indicator = {ALSMaxCLTCondition}, "ALSMaxCLTCondition No", "ALSMaxCLTCondition Yes"
	indicator = {ALSMaxThrottleIntentCondition}, "ALSMaxThrottleIntentCondition No", "ALSMaxThrottleIntentCondition Yes"
	indicator = {isALSSwitchActivated}, "isALSSwitchActivated No", "isALSSwitchActivated Yes"
	indicator = {ALSActivatePinState}, "ALSActivatePinState No", "ALSActivatePinState Yes"
	indicator = {ALSSwitchCondition}, "ALSSwitchCondition No", "ALSSwitchCondition Yes"
	indicator = {ALSTimerCondition}, "ALSTimerCondition No", "ALSTimerCondition Yes"

dialog = antilag_system_stateDialog, "antilag_system_state"
	panel = antilag_system_stateIndicatorPanel
	liveGraph = antilag_system_state_1_Graph, "Graph", South
		graphLine = fuelALSCorrection
		graphLine = timingALSCorrection

indicatorPanel = boost_controlIndicatorPanel, 2
	indicator = {isTpsInvalid}, "isTpsInvalid No", "isTpsInvalid Yes"
	indicator = {m_shouldResetPid}, "m_shouldResetPid No", "m_shouldResetPid Yes"
	indicator = {isBelowClosedLoopThreshold}, "isBelowClosedLoopThreshold No", "isBelowClosedLoopThreshold Yes"
	indicator = {isNotClosedLoop}, "isNotClosedLoop No", "isNotClosedLoop Yes"
	indicator = {isZeroRpm}, "isZeroRpm No", "isZeroRpm Yes"
	indicator = {hasInitBoost}, "hasInitBoost No", "hasInitBoost Yes"
	indicator = {rpmTooLow}, "rpmTooLow No", "rpmTooLow Yes"
	indicator = {tpsTooLow}, "tpsTooLow No", "tpsTooLow Yes"
	indicator = {mapTooLow}, "mapTooLow No", "mapTooLow Yes"

dialog = boost_controlDialog, "boost_control"
	panel = boost_controlIndicatorPanel
	liveGraph = boost_control_1_Graph, "Graph", South
		graphLine = luaTargetAdd
		graphLine = boostOutput
		graphLine = luaTargetMult
		graphLine = openLoopPart
	liveGraph = boost_control_2_Graph, "Graph", South
		graphLine = luaOpenLoopAdd
		graphLine = boostControllerClosedLoopPart
		graphLine = boostControlTarget

indicatorPanel = ac_controlIndicatorPanel, 2
	indicator = {acButtonState}, "acButtonState No", "acButtonState Yes"
	indicator = {m_acEnabled}, "m_acEnabled No", "m_acEnabled Yes"
	indicator = {engineTooSlow}, "engineTooSlow No", "engineTooSlow Yes"
	indicator = {engineTooFast}, "engineTooFast No", "engineTooFast Yes"
	indicator = {noClt}, "noClt No", "noClt Yes"
	indicator = {engineTooHot}, "engineTooHot No", "engineTooHot Yes"
	indicator = {tpsTooHigh}, "tpsTooHigh No", "tpsTooHigh Yes"
	indicator = {isDisabledByLua}, "isDisabledByLua No", "isDisabledByLua Yes"
	indicator = {acCompressorState}, "acCompressorState No", "acCompressorState Yes"

dialog = ac_controlDialog, "ac_control"
	panel = ac_controlIndicatorPanel
	liveGraph = ac_control_1_Graph, "Graph", South
		graphLine = latest_usage_ac_control
		graphLine = acSwitchLastChangeTimeMs

indicatorPanel = fan_controlIndicatorPanel, 2
	indicator = {cranking}, "cranking No", "cranking Yes"
	indicator = {notRunning}, "notRunning No", "notRunning Yes"
	indicator = {disabledWhileEngineStopped}, "disabledWhileEngineStopped No", "disabledWhileEngineStopped Yes"
	indicator = {brokenClt}, "brokenClt No", "brokenClt Yes"
	indicator = {enabledForAc}, "enabledForAc No", "enabledForAc Yes"
	indicator = {hot}, "hot No", "hot Yes"
	indicator = {cold}, "cold No", "cold Yes"

dialog = fan_controlDialog, "fan_control"
	panel = fan_controlIndicatorPanel

indicatorPanel = fuel_pump_controlIndicatorPanel, 2
	indicator = {isPrime}, "isPrime No", "isPrime Yes"
	indicator = {engineTurnedRecently}, "engineTurnedRecently No", "engineTurnedRecently Yes"
	indicator = {isFuelPumpOn}, "isFuelPumpOn No", "isFuelPumpOn Yes"
	indicator = {ignitionOn}, "ignitionOn No", "ignitionOn Yes"

dialog = fuel_pump_controlDialog, "fuel_pump_control"
	panel = fuel_pump_controlIndicatorPanel

indicatorPanel = main_relayIndicatorPanel, 2
	indicator = {isBenchTest}, "isBenchTest No", "isBenchTest Yes"
	indicator = {hasIgnitionVoltage}, "hasIgnitionVoltage No", "hasIgnitionVoltage Yes"
	indicator = {mainRelayState}, "mainRelayState No", "mainRelayState Yes"
	indicator = {delayedShutoffRequested}, "delayedShutoffRequested No", "delayedShutoffRequested Yes"

dialog = main_relayDialog, "main_relay"
	panel = main_relayIndicatorPanel

indicatorPanel = engine_stateIndicatorPanel, 2
	indicator = {lua_clutchUpState}, "clutchUpState No", "clutchUpState Yes"
	indicator = {lua_brakePedalState}, "brakePedalState No", "brakePedalState Yes"
	indicator = {lua_acRequestState}, "acRequestState No", "acRequestState Yes"
	indicator = {lua_luaDisableEtb}, "luaDisableEtb No", "luaDisableEtb Yes"
	indicator = {lua_luaIgnCut}, "luaIgnCut No", "luaIgnCut Yes"
	indicator = {clutchUpState}, "clutchUpState No", "clutchUpState Yes"
	indicator = {clutchDownState}, "clutchDownState No", "clutchDownState Yes"
	indicator = {brakePedalState}, "brakePedalState No", "brakePedalState Yes"
	indicator = {startStopState}, "startStopState No", "startStopState Yes"

dialog = engine_stateDialog, "engine_state"
	panel = engine_stateIndicatorPanel
	liveGraph = engine_state_1_Graph, "Graph", South
		graphLine = lua_fuelAdd
		graphLine = lua_fuelMult
		graphLine = sd_tCharge
		graphLine = sd_tChargeK
	liveGraph = engine_state_2_Graph, "Graph", South
		graphLine = crankingFuel_coolantTemperatureCoefficient
		graphLine = crankingFuel_tpsCoefficient
		graphLine = crankingFuel_durationCoefficient
		graphLine = crankingFuel_fuel
	liveGraph = engine_state_3_Graph, "Graph", South
		graphLine = baroCorrection
		graphLine = hellenBoardId
		graphLine = startStopStateToggleCounter
		graphLine = egtValue1
	liveGraph = engine_state_4_Graph, "Graph", South
		graphLine = egtValue2
		graphLine = desiredRpmLimit
		graphLine = fuelInjectionCounter
		graphLine = sparkCounter
	liveGraph = engine_state_5_Graph, "Graph", South
		graphLine = fuelingLoad
		graphLine = ignitionLoad
		graphLine = veTableYAxis

indicatorPanel = tps_accel_stateIndicatorPanel, 2
	indicator = {isAboveAccelThreshold}, "isAboveAccelThreshold No", "isAboveAccelThreshold Yes"
	indicator = {isBelowDecelThreshold}, "isBelowDecelThreshold No", "isBelowDecelThreshold Yes"
	indicator = {isTimeToResetAccumulator}, "isTimeToResetAccumulator No", "isTimeToResetAccumulator Yes"
	indicator = {isFractionalEnrichment}, "isFractionalEnrichment No", "isFractionalEnrichment Yes"
	indicator = {belowEpsilon}, "belowEpsilon No", "belowEpsilon Yes"
	indicator = {tooShort}, "tooShort No", "tooShort Yes"

dialog = tps_accel_stateDialog, "tps_accel_state"
	panel = tps_accel_stateIndicatorPanel
	liveGraph = tps_accel_state_1_Graph, "Graph", South
		graphLine = tpsFrom
		graphLine = tpsTo
		graphLine = deltaTps
		graphLine = extraFuel
	liveGraph = tps_accel_state_2_Graph, "Graph", South
		graphLine = valueFromTable
		graphLine = fractionalInjFuel
		graphLine = accumulatedValue
		graphLine = maxExtraPerCycle
	liveGraph = tps_accel_state_3_Graph, "Graph", South
		graphLine = maxExtraPerPeriod
		graphLine = maxInjectedPerPeriod
		graphLine = cycleCnt


dialog = trigger_centralDialog, "trigger_central"
	liveGraph = trigger_central_1_Graph, "Graph", South
		graphLine = hwEventCounters1
		graphLine = hwEventCounters2
		graphLine = hwEventCounters3
		graphLine = hwEventCounters4
	liveGraph = trigger_central_2_Graph, "Graph", South
		graphLine = hwEventCounters5
		graphLine = hwEventCounters6
		graphLine = vvtCamCounter
		graphLine = mapVvt_MAP_AT_SPECIAL_POINT
	liveGraph = trigger_central_3_Graph, "Graph", South
		graphLine = mapVvt_MAP_AT_DIFF
		graphLine = mapVvt_MAP_AT_CYCLE_COUNT
		graphLine = mapVvt_map_peak
		graphLine = currentEngineDecodedPhase
	liveGraph = trigger_central_4_Graph, "Graph", South
		graphLine = triggerToothAngleError
		graphLine = triggerIgnoredToothCount


dialog = trigger_stateDialog, "trigger_state"
	liveGraph = trigger_state_1_Graph, "Graph", South
		graphLine = crankSynchronizationCounter
		graphLine = vvtSyncGapRatio
		graphLine = vvtCurrentPosition
		graphLine = triggerSyncGapRatio
	liveGraph = trigger_state_2_Graph, "Graph", South
		graphLine = triggerStateIndex
		graphLine = vvtCounter
		graphLine = camResyncCounter
		graphLine = vvtStateIndex

indicatorPanel = trigger_state_primaryIndicatorPanel, 2
	indicator = {m_hasSynchronizedPhase}, "m_hasSynchronizedPhase No", "m_hasSynchronizedPhase Yes"

dialog = trigger_state_primaryDialog, "trigger_state_primary"
	panel = trigger_state_primaryIndicatorPanel


dialog = wall_fuel_stateDialog, "wall_fuel_state"
	liveGraph = wall_fuel_state_1_Graph, "Graph", South
		graphLine = wallFuelCorrection
		graphLine = wallFuel

indicatorPanel = idle_stateIndicatorPanel, 2
	indicator = {mightResetPid}, "mightResetPid No", "mightResetPid Yes"
	indicator = {shouldResetPid}, "shouldResetPid No", "shouldResetPid Yes"
	indicator = {wasResetPid}, "wasResetPid No", "wasResetPid Yes"
	indicator = {mustResetPid}, "mustResetPid No", "mustResetPid Yes"
	indicator = {isCranking}, "isCranking No", "isCranking Yes"
	indicator = {isIacTableForCoasting}, "isIacTableForCoasting No", "isIacTableForCoasting Yes"
	indicator = {notIdling}, "notIdling No", "notIdling Yes"
	indicator = {needReset}, "needReset No", "needReset Yes"
	indicator = {isInDeadZone}, "isInDeadZone No", "isInDeadZone Yes"
	indicator = {isBlipping}, "isBlipping No", "isBlipping Yes"
	indicator = {looksLikeRunning}, "looksLikeRunning No", "looksLikeRunning Yes"
	indicator = {looksLikeCoasting}, "looksLikeCoasting No", "looksLikeCoasting Yes"
	indicator = {looksLikeCrankToIdle}, "looksLikeCrankToIdle No", "looksLikeCrankToIdle Yes"
	indicator = {isVerboseIAC}, "isVerboseIAC No", "isVerboseIAC Yes"
	indicator = {isIdleCoasting}, "isIdleCoasting No", "isIdleCoasting Yes"
	indicator = {isIdleClosedLoop}, "isIdleClosedLoop No", "isIdleClosedLoop Yes"

dialog = idle_stateDialog, "idle_state"
	panel = idle_stateIndicatorPanel
	liveGraph = idle_state_1_Graph, "Graph", South
		graphLine = idleState
		graphLine = currentIdlePosition
		graphLine = baseIdlePosition
		graphLine = idleClosedLoop
	liveGraph = idle_state_2_Graph, "Graph", South
		graphLine = iacByTpsTaper
		graphLine = throttlePedalUpState
		graphLine = idleTarget
		graphLine = targetRpmByClt
	liveGraph = idle_state_3_Graph, "Graph", South
		graphLine = targetRpmAcBump
		graphLine = iacByRpmTaper
		graphLine = luaAdd

indicatorPanel = electronic_throttleIndicatorPanel, 2
	indicator = {etbRevLimitActive}, "etbRevLimitActive No", "etbRevLimitActive Yes"
	indicator = {jamDetected}, "jamDetected No", "jamDetected Yes"

dialog = electronic_throttleDialog, "electronic_throttle"
	panel = electronic_throttleIndicatorPanel
	liveGraph = electronic_throttle_1_Graph, "Graph", South
		graphLine = idlePosition
		graphLine = trim
		graphLine = luaAdjustment
		graphLine = m_wastegatePosition
	liveGraph = electronic_throttle_2_Graph, "Graph", South
		graphLine = etbFeedForward
		graphLine = etbIntegralError
		graphLine = etbCurrentTarget
		graphLine = etbCurrentAdjustedTarget
	liveGraph = electronic_throttle_3_Graph, "Graph", South
		graphLine = etbDutyRateOfChange
		graphLine = etbDutyAverage
		graphLine = etbTpsErrorCounter
		graphLine = etbPpsErrorCounter
	liveGraph = electronic_throttle_4_Graph, "Graph", South
		graphLine = etbErrorCode
		graphLine = jamTimer


dialog = wideband_stateDialog, "wideband_state"
	liveGraph = wideband_state_1_Graph, "Graph", South
		graphLine = faultCode
		graphLine = heaterDuty
		graphLine = pumpDuty
		graphLine = tempC
	liveGraph = wideband_state_2_Graph, "Graph", South
		graphLine = nernstVoltage
		graphLine = esr

indicatorPanel = dc_motorsIndicatorPanel, 2
	indicator = {isEnabled0}, "isEnabled0 No", "isEnabled0 Yes"

dialog = dc_motorsDialog, "dc_motors"
	panel = dc_motorsIndicatorPanel
	liveGraph = dc_motors_1_Graph, "Graph", South
		graphLine = dcOutput0
		graphLine = isEnabled0_int


dialog = sent_stateDialog, "sent_state"
	liveGraph = sent_state_1_Graph, "Graph", South
		graphLine = value0
		graphLine = value1
		graphLine = errorRate

indicatorPanel = throttle_modelIndicatorPanel, 2
	indicator = {throttleUseWotModel}, "throttleUseWotModel No", "throttleUseWotModel Yes"

dialog = throttle_modelDialog, "throttle_model"
	panel = throttle_modelIndicatorPanel
	liveGraph = throttle_model_1_Graph, "Graph", South
		graphLine = throttleModelCrossoverAngle
		graphLine = throttleEstimatedFlow


dialog = vvtDialog, "vvt"
	liveGraph = vvt_1_Graph, "Graph", South
		graphLine = vvtTarget
		graphLine = vvtOutput

